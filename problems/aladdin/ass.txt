
aladdin:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 62 2f 00 00    	push   0x2f62(%rip)        # 3f88 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 63 2f 00 00 	bnd jmp *0x2f63(%rip)        # 3f90 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop

Disassembly of section .plt.got:

00000000000010b0 <__cxa_finalize@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 3d 2f 00 00 	bnd jmp *0x2f3d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010c0 <puts@plt>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	f2 ff 25 cd 2e 00 00 	bnd jmp *0x2ecd(%rip)        # 3f98 <puts@GLIBC_2.2.5>
    10cb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010d0 <__stack_chk_fail@plt>:
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	f2 ff 25 c5 2e 00 00 	bnd jmp *0x2ec5(%rip)        # 3fa0 <__stack_chk_fail@GLIBC_2.4>
    10db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010e0 <setbuf@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 bd 2e 00 00 	bnd jmp *0x2ebd(%rip)        # 3fa8 <setbuf@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010f0 <printf@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 b5 2e 00 00 	bnd jmp *0x2eb5(%rip)        # 3fb0 <printf@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <memset@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 ad 2e 00 00 	bnd jmp *0x2ead(%rip)        # 3fb8 <memset@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <read@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 a5 2e 00 00 	bnd jmp *0x2ea5(%rip)        # 3fc0 <read@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <prctl@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 9d 2e 00 00 	bnd jmp *0x2e9d(%rip)        # 3fc8 <prctl@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <strstr@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 95 2e 00 00 	bnd jmp *0x2e95(%rip)        # 3fd0 <strstr@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	31 ed                	xor    %ebp,%ebp
    1146:	49 89 d1             	mov    %rdx,%r9
    1149:	5e                   	pop    %rsi
    114a:	48 89 e2             	mov    %rsp,%rdx
    114d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1151:	50                   	push   %rax
    1152:	54                   	push   %rsp
    1153:	45 31 c0             	xor    %r8d,%r8d
    1156:	31 c9                	xor    %ecx,%ecx
    1158:	48 8d 3d ca 00 00 00 	lea    0xca(%rip),%rdi        # 1229 <main>
    115f:	ff 15 73 2e 00 00    	call   *0x2e73(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1165:	f4                   	hlt    
    1166:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    116d:	00 00 00 

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d a1 2e 00 00 	lea    0x2ea1(%rip),%rdi        # 4018 <__TMC_END__>
    1177:	48 8d 05 9a 2e 00 00 	lea    0x2e9a(%rip),%rax        # 4018 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 56 2e 00 00 	mov    0x2e56(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmp    *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	ret    
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 71 2e 00 00 	lea    0x2e71(%rip),%rdi        # 4018 <__TMC_END__>
    11a7:	48 8d 35 6a 2e 00 00 	lea    0x2e6a(%rip),%rsi        # 4018 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmp    *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	ret    
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	f3 0f 1e fa          	endbr64 
    11e4:	80 3d 5d 2e 00 00 00 	cmpb   $0x0,0x2e5d(%rip)        # 4048 <completed.0>
    11eb:	75 2b                	jne    1218 <__do_global_dtors_aux+0x38>
    11ed:	55                   	push   %rbp
    11ee:	48 83 3d 02 2e 00 00 	cmpq   $0x0,0x2e02(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f5:	00 
    11f6:	48 89 e5             	mov    %rsp,%rbp
    11f9:	74 0c                	je     1207 <__do_global_dtors_aux+0x27>
    11fb:	48 8b 3d 06 2e 00 00 	mov    0x2e06(%rip),%rdi        # 4008 <__dso_handle>
    1202:	e8 a9 fe ff ff       	call   10b0 <__cxa_finalize@plt>
    1207:	e8 64 ff ff ff       	call   1170 <deregister_tm_clones>
    120c:	c6 05 35 2e 00 00 01 	movb   $0x1,0x2e35(%rip)        # 4048 <completed.0>
    1213:	5d                   	pop    %rbp
    1214:	c3                   	ret    
    1215:	0f 1f 00             	nopl   (%rax)
    1218:	c3                   	ret    
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	f3 0f 1e fa          	endbr64 
    1224:	e9 77 ff ff ff       	jmp    11a0 <register_tm_clones>

0000000000001229 <main>:
    1229:	f3 0f 1e fa          	endbr64 
    122d:	55                   	push   %rbp
    122e:	48 89 e5             	mov    %rsp,%rbp
    1231:	48 83 ec 40          	sub    $0x40,%rsp
    1235:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    123c:	00 00 
    123e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1242:	31 c0                	xor    %eax,%eax
    1244:	66 c7 45 d0 20 00    	movw   $0x20,-0x30(%rbp)
    124a:	c6 45 d2 00          	movb   $0x0,-0x2e(%rbp)
    124e:	c6 45 d3 00          	movb   $0x0,-0x2d(%rbp)
    1252:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)
    1259:	66 c7 45 d8 15 00    	movw   $0x15,-0x28(%rbp)
    125f:	c6 45 da 01          	movb   $0x1,-0x26(%rbp)
    1263:	c6 45 db 00          	movb   $0x0,-0x25(%rbp)
    1267:	c7 45 dc 3b 00 00 00 	movl   $0x3b,-0x24(%rbp)
    126e:	66 c7 45 e0 35 00    	movw   $0x35,-0x20(%rbp)
    1274:	c6 45 e2 01          	movb   $0x1,-0x1e(%rbp)
    1278:	c6 45 e3 00          	movb   $0x0,-0x1d(%rbp)
    127c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
    1283:	66 c7 45 e8 06 00    	movw   $0x6,-0x18(%rbp)
    1289:	c6 45 ea 00          	movb   $0x0,-0x16(%rbp)
    128d:	c6 45 eb 00          	movb   $0x0,-0x15(%rbp)
    1291:	c7 45 ec 00 00 05 00 	movl   $0x50000,-0x14(%rbp)
    1298:	66 c7 45 f0 06 00    	movw   $0x6,-0x10(%rbp)
    129e:	c6 45 f2 00          	movb   $0x0,-0xe(%rbp)
    12a2:	c6 45 f3 00          	movb   $0x0,-0xd(%rbp)
    12a6:	c7 45 f4 00 00 ff 7f 	movl   $0x7fff0000,-0xc(%rbp)
    12ad:	66 c7 45 c0 05 00    	movw   $0x5,-0x40(%rbp)
    12b3:	48 8d 45 d0          	lea    -0x30(%rbp),%rax
    12b7:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
    12bb:	41 b8 00 00 00 00    	mov    $0x0,%r8d
    12c1:	b9 00 00 00 00       	mov    $0x0,%ecx
    12c6:	ba 00 00 00 00       	mov    $0x0,%edx
    12cb:	be 01 00 00 00       	mov    $0x1,%esi
    12d0:	bf 26 00 00 00       	mov    $0x26,%edi
    12d5:	b8 00 00 00 00       	mov    $0x0,%eax
    12da:	e8 41 fe ff ff       	call   1120 <prctl@plt>
    12df:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    12e3:	48 89 c2             	mov    %rax,%rdx
    12e6:	be 02 00 00 00       	mov    $0x2,%esi
    12eb:	bf 16 00 00 00       	mov    $0x16,%edi
    12f0:	b8 00 00 00 00       	mov    $0x0,%eax
    12f5:	e8 26 fe ff ff       	call   1120 <prctl@plt>
    12fa:	48 8b 05 2f 2d 00 00 	mov    0x2d2f(%rip),%rax        # 4030 <stdin@GLIBC_2.2.5>
    1301:	be 00 00 00 00       	mov    $0x0,%esi
    1306:	48 89 c7             	mov    %rax,%rdi
    1309:	e8 d2 fd ff ff       	call   10e0 <setbuf@plt>
    130e:	48 8b 05 0b 2d 00 00 	mov    0x2d0b(%rip),%rax        # 4020 <stdout@GLIBC_2.2.5>
    1315:	be 00 00 00 00       	mov    $0x0,%esi
    131a:	48 89 c7             	mov    %rax,%rdi
    131d:	e8 be fd ff ff       	call   10e0 <setbuf@plt>
    1322:	48 8b 05 17 2d 00 00 	mov    0x2d17(%rip),%rax        # 4040 <stderr@GLIBC_2.2.5>
    1329:	be 00 00 00 00       	mov    $0x0,%esi
    132e:	48 89 c7             	mov    %rax,%rdi
    1331:	e8 aa fd ff ff       	call   10e0 <setbuf@plt>
    1336:	48 8d 05 cb 0c 00 00 	lea    0xccb(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    133d:	48 89 c7             	mov    %rax,%rdi
    1340:	e8 7b fd ff ff       	call   10c0 <puts@plt>
    1345:	e9 91 00 00 00       	jmp    13db <main+0x1b2>
    134a:	8b 05 c0 2c 00 00    	mov    0x2cc0(%rip),%eax        # 4010 <chance>
    1350:	89 c6                	mov    %eax,%esi
    1352:	48 8d 05 da 0c 00 00 	lea    0xcda(%rip),%rax        # 2033 <_IO_stdin_used+0x33>
    1359:	48 89 c7             	mov    %rax,%rdi
    135c:	b8 00 00 00 00       	mov    $0x0,%eax
    1361:	e8 8a fd ff ff       	call   10f0 <printf@plt>
    1366:	ba 00 01 00 00       	mov    $0x100,%edx
    136b:	be 00 00 00 00       	mov    $0x0,%esi
    1370:	48 8d 05 e9 2c 00 00 	lea    0x2ce9(%rip),%rax        # 4060 <wish>
    1377:	48 89 c7             	mov    %rax,%rdi
    137a:	e8 81 fd ff ff       	call   1100 <memset@plt>
    137f:	ba 00 01 00 00       	mov    $0x100,%edx
    1384:	48 8d 05 d5 2c 00 00 	lea    0x2cd5(%rip),%rax        # 4060 <wish>
    138b:	48 89 c6             	mov    %rax,%rsi
    138e:	bf 00 00 00 00       	mov    $0x0,%edi
    1393:	e8 78 fd ff ff       	call   1110 <read@plt>
    1398:	48 8d 05 a3 0c 00 00 	lea    0xca3(%rip),%rax        # 2042 <_IO_stdin_used+0x42>
    139f:	48 89 c6             	mov    %rax,%rsi
    13a2:	48 8d 05 b7 2c 00 00 	lea    0x2cb7(%rip),%rax        # 4060 <wish>
    13a9:	48 89 c7             	mov    %rax,%rdi
    13ac:	e8 7f fd ff ff       	call   1130 <strstr@plt>
    13b1:	48 85 c0             	test   %rax,%rax
    13b4:	74 11                	je     13c7 <main+0x19e>
    13b6:	48 8d 05 93 0c 00 00 	lea    0xc93(%rip),%rax        # 2050 <_IO_stdin_used+0x50>
    13bd:	48 89 c7             	mov    %rax,%rdi
    13c0:	e8 fb fc ff ff       	call   10c0 <puts@plt>
    13c5:	eb 31                	jmp    13f8 <main+0x1cf>
    13c7:	48 8d 05 92 2c 00 00 	lea    0x2c92(%rip),%rax        # 4060 <wish>
    13ce:	48 89 c7             	mov    %rax,%rdi
    13d1:	b8 00 00 00 00       	mov    $0x0,%eax
    13d6:	e8 15 fd ff ff       	call   10f0 <printf@plt>
    13db:	8b 05 2f 2c 00 00    	mov    0x2c2f(%rip),%eax        # 4010 <chance>
    13e1:	83 e8 01             	sub    $0x1,%eax
    13e4:	89 05 26 2c 00 00    	mov    %eax,0x2c26(%rip)        # 4010 <chance>
    13ea:	8b 05 20 2c 00 00    	mov    0x2c20(%rip),%eax        # 4010 <chance>
    13f0:	85 c0                	test   %eax,%eax
    13f2:	0f 85 52 ff ff ff    	jne    134a <main+0x121>
    13f8:	48 8d 05 59 0c 00 00 	lea    0xc59(%rip),%rax        # 2058 <_IO_stdin_used+0x58>
    13ff:	48 89 c7             	mov    %rax,%rdi
    1402:	b8 00 00 00 00       	mov    $0x0,%eax
    1407:	e8 e4 fc ff ff       	call   10f0 <printf@plt>
    140c:	b8 00 00 00 00       	mov    $0x0,%eax
    1411:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1415:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    141c:	00 00 
    141e:	74 05                	je     1425 <main+0x1fc>
    1420:	e8 ab fc ff ff       	call   10d0 <__stack_chk_fail@plt>
    1425:	c9                   	leave  
    1426:	c3                   	ret    

Disassembly of section .fini:

0000000000001428 <_fini>:
    1428:	f3 0f 1e fa          	endbr64 
    142c:	48 83 ec 08          	sub    $0x8,%rsp
    1430:	48 83 c4 08          	add    $0x8,%rsp
    1434:	c3                   	ret    
