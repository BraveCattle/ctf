
04_chall:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 4a 2f 00 00    	push   0x2f4a(%rip)        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 4b 2f 00 00 	bnd jmp *0x2f4b(%rip)        # 3f78 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop

Disassembly of section .plt.got:

00000000000010e0 <__cxa_finalize@plt>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	f2 ff 25 0d 2f 00 00 	bnd jmp *0x2f0d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

00000000000010f0 <puts@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 85 2e 00 00 	bnd jmp *0x2e85(%rip)        # 3f80 <puts@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001100 <__stack_chk_fail@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 7d 2e 00 00 	bnd jmp *0x2e7d(%rip)        # 3f88 <__stack_chk_fail@GLIBC_2.4>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <printf@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 75 2e 00 00 	bnd jmp *0x2e75(%rip)        # 3f90 <printf@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <srand@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 6d 2e 00 00 	bnd jmp *0x2e6d(%rip)        # 3f98 <srand@GLIBC_2.2.5>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <memcmp@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 65 2e 00 00 	bnd jmp *0x2e65(%rip)        # 3fa0 <memcmp@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <fgets@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 5d 2e 00 00 	bnd jmp *0x2e5d(%rip)        # 3fa8 <fgets@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <time@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 55 2e 00 00 	bnd jmp *0x2e55(%rip)        # 3fb0 <time@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <fopen@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 4d 2e 00 00 	bnd jmp *0x2e4d(%rip)        # 3fb8 <fopen@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <__isoc99_scanf@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 45 2e 00 00 	bnd jmp *0x2e45(%rip)        # 3fc0 <__isoc99_scanf@GLIBC_2.7>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <exit@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 3d 2e 00 00 	bnd jmp *0x2e3d(%rip)        # 3fc8 <exit@GLIBC_2.2.5>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <rand@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 35 2e 00 00 	bnd jmp *0x2e35(%rip)        # 3fd0 <rand@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000011a0 <_start>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	31 ed                	xor    %ebp,%ebp
    11a6:	49 89 d1             	mov    %rdx,%r9
    11a9:	5e                   	pop    %rsi
    11aa:	48 89 e2             	mov    %rsp,%rdx
    11ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11b1:	50                   	push   %rax
    11b2:	54                   	push   %rsp
    11b3:	45 31 c0             	xor    %r8d,%r8d
    11b6:	31 c9                	xor    %ecx,%ecx
    11b8:	48 8d 3d c9 01 00 00 	lea    0x1c9(%rip),%rdi        # 1388 <main>
    11bf:	ff 15 13 2e 00 00    	call   *0x2e13(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    11c5:	f4                   	hlt    
    11c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11cd:	00 00 00 

00000000000011d0 <deregister_tm_clones>:
    11d0:	48 8d 3d 39 2e 00 00 	lea    0x2e39(%rip),%rdi        # 4010 <__TMC_END__>
    11d7:	48 8d 05 32 2e 00 00 	lea    0x2e32(%rip),%rax        # 4010 <__TMC_END__>
    11de:	48 39 f8             	cmp    %rdi,%rax
    11e1:	74 15                	je     11f8 <deregister_tm_clones+0x28>
    11e3:	48 8b 05 f6 2d 00 00 	mov    0x2df6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    11ea:	48 85 c0             	test   %rax,%rax
    11ed:	74 09                	je     11f8 <deregister_tm_clones+0x28>
    11ef:	ff e0                	jmp    *%rax
    11f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    11f8:	c3                   	ret    
    11f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001200 <register_tm_clones>:
    1200:	48 8d 3d 09 2e 00 00 	lea    0x2e09(%rip),%rdi        # 4010 <__TMC_END__>
    1207:	48 8d 35 02 2e 00 00 	lea    0x2e02(%rip),%rsi        # 4010 <__TMC_END__>
    120e:	48 29 fe             	sub    %rdi,%rsi
    1211:	48 89 f0             	mov    %rsi,%rax
    1214:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1218:	48 c1 f8 03          	sar    $0x3,%rax
    121c:	48 01 c6             	add    %rax,%rsi
    121f:	48 d1 fe             	sar    %rsi
    1222:	74 14                	je     1238 <register_tm_clones+0x38>
    1224:	48 8b 05 c5 2d 00 00 	mov    0x2dc5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    122b:	48 85 c0             	test   %rax,%rax
    122e:	74 08                	je     1238 <register_tm_clones+0x38>
    1230:	ff e0                	jmp    *%rax
    1232:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1238:	c3                   	ret    
    1239:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001240 <__do_global_dtors_aux>:
    1240:	f3 0f 1e fa          	endbr64 
    1244:	80 3d c5 2d 00 00 00 	cmpb   $0x0,0x2dc5(%rip)        # 4010 <__TMC_END__>
    124b:	75 2b                	jne    1278 <__do_global_dtors_aux+0x38>
    124d:	55                   	push   %rbp
    124e:	48 83 3d a2 2d 00 00 	cmpq   $0x0,0x2da2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1255:	00 
    1256:	48 89 e5             	mov    %rsp,%rbp
    1259:	74 0c                	je     1267 <__do_global_dtors_aux+0x27>
    125b:	48 8b 3d a6 2d 00 00 	mov    0x2da6(%rip),%rdi        # 4008 <__dso_handle>
    1262:	e8 79 fe ff ff       	call   10e0 <__cxa_finalize@plt>
    1267:	e8 64 ff ff ff       	call   11d0 <deregister_tm_clones>
    126c:	c6 05 9d 2d 00 00 01 	movb   $0x1,0x2d9d(%rip)        # 4010 <__TMC_END__>
    1273:	5d                   	pop    %rbp
    1274:	c3                   	ret    
    1275:	0f 1f 00             	nopl   (%rax)
    1278:	c3                   	ret    
    1279:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001280 <frame_dummy>:
    1280:	f3 0f 1e fa          	endbr64 
    1284:	e9 77 ff ff ff       	jmp    1200 <register_tm_clones>

0000000000001289 <getrandom>:
    1289:	f3 0f 1e fa          	endbr64 
    128d:	55                   	push   %rbp
    128e:	48 89 e5             	mov    %rsp,%rbp
    1291:	48 83 ec 20          	sub    $0x20,%rsp
    1295:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    129c:	00 00 
    129e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    12a2:	31 c0                	xor    %eax,%eax
    12a4:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12a8:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    12ad:	bf 00 00 00 00       	mov    $0x0,%edi
    12b2:	e8 99 fe ff ff       	call   1150 <time@plt>
    12b7:	48 89 c1             	mov    %rax,%rcx
    12ba:	48 ba 89 88 88 88 88 	movabs $0x8888888888888889,%rdx
    12c1:	88 88 88 
    12c4:	48 89 c8             	mov    %rcx,%rax
    12c7:	48 f7 ea             	imul   %rdx
    12ca:	48 8d 04 0a          	lea    (%rdx,%rcx,1),%rax
    12ce:	48 c1 f8 05          	sar    $0x5,%rax
    12d2:	48 c1 f9 3f          	sar    $0x3f,%rcx
    12d6:	48 89 ca             	mov    %rcx,%rdx
    12d9:	48 29 d0             	sub    %rdx,%rax
    12dc:	89 c7                	mov    %eax,%edi
    12de:	e8 3d fe ff ff       	call   1120 <srand@plt>
    12e3:	e8 a8 fe ff ff       	call   1190 <rand@plt>
    12e8:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12ec:	f2 0f 2a c0          	cvtsi2sd %eax,%xmm0
    12f0:	f2 0f 10 0d f0 0d 00 	movsd  0xdf0(%rip),%xmm1        # 20e8 <_IO_stdin_used+0xe8>
    12f7:	00 
    12f8:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
    12fc:	f2 0f 11 45 e0       	movsd  %xmm0,-0x20(%rbp)
    1301:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
    1305:	48 8b 00             	mov    (%rax),%rax
    1308:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    130c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1310:	83 e0 7f             	and    $0x7f,%eax
    1313:	88 45 f4             	mov    %al,-0xc(%rbp)
    1316:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131a:	48 c1 e8 08          	shr    $0x8,%rax
    131e:	83 e0 7f             	and    $0x7f,%eax
    1321:	88 45 f5             	mov    %al,-0xb(%rbp)
    1324:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1328:	48 c1 e8 10          	shr    $0x10,%rax
    132c:	83 e0 7f             	and    $0x7f,%eax
    132f:	88 45 f6             	mov    %al,-0xa(%rbp)
    1332:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1336:	48 c1 e8 18          	shr    $0x18,%rax
    133a:	83 e0 7f             	and    $0x7f,%eax
    133d:	88 45 f7             	mov    %al,-0x9(%rbp)
    1340:	0f b6 45 f4          	movzbl -0xc(%rbp),%eax
    1344:	3c 60                	cmp    $0x60,%al
    1346:	7f 9b                	jg     12e3 <getrandom+0x5a>
    1348:	0f b6 45 f5          	movzbl -0xb(%rbp),%eax
    134c:	3c 60                	cmp    $0x60,%al
    134e:	7f 93                	jg     12e3 <getrandom+0x5a>
    1350:	0f b6 45 f6          	movzbl -0xa(%rbp),%eax
    1354:	3c 60                	cmp    $0x60,%al
    1356:	7f 8b                	jg     12e3 <getrandom+0x5a>
    1358:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
    135c:	3c 60                	cmp    $0x60,%al
    135e:	7e 02                	jle    1362 <getrandom+0xd9>
    1360:	eb 81                	jmp    12e3 <getrandom+0x5a>
    1362:	90                   	nop
    1363:	f2 0f 10 45 e0       	movsd  -0x20(%rbp),%xmm0
    1368:	66 48 0f 7e c0       	movq   %xmm0,%rax
    136d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1371:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1378:	00 00 
    137a:	74 05                	je     1381 <getrandom+0xf8>
    137c:	e8 7f fd ff ff       	call   1100 <__stack_chk_fail@plt>
    1381:	66 48 0f 6e c0       	movq   %rax,%xmm0
    1386:	c9                   	leave  
    1387:	c3                   	ret    

0000000000001388 <main>:
    1388:	f3 0f 1e fa          	endbr64 
    138c:	55                   	push   %rbp
    138d:	48 89 e5             	mov    %rsp,%rbp
    1390:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
    1394:	89 7d 8c             	mov    %edi,-0x74(%rbp)
    1397:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
    139b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    13a2:	00 00 
    13a4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13a8:	31 c0                	xor    %eax,%eax
    13aa:	b8 00 00 00 00       	mov    $0x0,%eax
    13af:	e8 d5 fe ff ff       	call   1289 <getrandom>
    13b4:	66 48 0f 7e c0       	movq   %xmm0,%rax
    13b9:	48 89 45 98          	mov    %rax,-0x68(%rbp)
    13bd:	48 8d 05 44 0c 00 00 	lea    0xc44(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    13c4:	48 89 c7             	mov    %rax,%rdi
    13c7:	b8 00 00 00 00       	mov    $0x0,%eax
    13cc:	e8 3f fd ff ff       	call   1110 <printf@plt>
    13d1:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    13d5:	48 8d 70 03          	lea    0x3(%rax),%rsi
    13d9:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    13dd:	48 8d 48 02          	lea    0x2(%rax),%rcx
    13e1:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    13e5:	48 8d 50 01          	lea    0x1(%rax),%rdx
    13e9:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
    13ed:	49 89 f0             	mov    %rsi,%r8
    13f0:	48 89 c6             	mov    %rax,%rsi
    13f3:	48 8d 05 26 0c 00 00 	lea    0xc26(%rip),%rax        # 2020 <_IO_stdin_used+0x20>
    13fa:	48 89 c7             	mov    %rax,%rdi
    13fd:	b8 00 00 00 00       	mov    $0x0,%eax
    1402:	e8 69 fd ff ff       	call   1170 <__isoc99_scanf@plt>
    1407:	48 8d 45 98          	lea    -0x68(%rbp),%rax
    140b:	48 8b 00             	mov    (%rax),%rax
    140e:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
    1412:	0f b6 45 b8          	movzbl -0x48(%rbp),%eax
    1416:	89 c2                	mov    %eax,%edx
    1418:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    141c:	83 e0 7f             	and    $0x7f,%eax
    141f:	31 d0                	xor    %edx,%eax
    1421:	88 45 bc             	mov    %al,-0x44(%rbp)
    1424:	0f b6 45 b9          	movzbl -0x47(%rbp),%eax
    1428:	89 c2                	mov    %eax,%edx
    142a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    142e:	48 c1 e8 08          	shr    $0x8,%rax
    1432:	83 e0 7f             	and    $0x7f,%eax
    1435:	31 d0                	xor    %edx,%eax
    1437:	88 45 bd             	mov    %al,-0x43(%rbp)
    143a:	0f b6 45 ba          	movzbl -0x46(%rbp),%eax
    143e:	89 c2                	mov    %eax,%edx
    1440:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    1444:	48 c1 e8 10          	shr    $0x10,%rax
    1448:	83 e0 7f             	and    $0x7f,%eax
    144b:	31 d0                	xor    %edx,%eax
    144d:	88 45 be             	mov    %al,-0x42(%rbp)
    1450:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax
    1454:	89 c2                	mov    %eax,%edx
    1456:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
    145a:	48 c1 e8 18          	shr    $0x18,%rax
    145e:	83 e0 7f             	and    $0x7f,%eax
    1461:	31 d0                	xor    %edx,%eax
    1463:	88 45 bf             	mov    %al,-0x41(%rbp)
    1466:	48 8d 05 bf 0b 00 00 	lea    0xbbf(%rip),%rax        # 202c <_IO_stdin_used+0x2c>
    146d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
    1471:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
    1475:	48 8d 45 bc          	lea    -0x44(%rbp),%rax
    1479:	ba 04 00 00 00       	mov    $0x4,%edx
    147e:	48 89 ce             	mov    %rcx,%rsi
    1481:	48 89 c7             	mov    %rax,%rdi
    1484:	e8 a7 fc ff ff       	call   1130 <memcmp@plt>
    1489:	85 c0                	test   %eax,%eax
    148b:	75 60                	jne    14ed <main+0x165>
    148d:	48 8d 05 9d 0b 00 00 	lea    0xb9d(%rip),%rax        # 2031 <_IO_stdin_used+0x31>
    1494:	48 89 c6             	mov    %rax,%rsi
    1497:	48 8d 05 95 0b 00 00 	lea    0xb95(%rip),%rax        # 2033 <_IO_stdin_used+0x33>
    149e:	48 89 c7             	mov    %rax,%rdi
    14a1:	e8 ba fc ff ff       	call   1160 <fopen@plt>
    14a6:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
    14aa:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)
    14af:	75 19                	jne    14ca <main+0x142>
    14b1:	48 8d 05 88 0b 00 00 	lea    0xb88(%rip),%rax        # 2040 <_IO_stdin_used+0x40>
    14b8:	48 89 c7             	mov    %rax,%rdi
    14bb:	e8 30 fc ff ff       	call   10f0 <puts@plt>
    14c0:	bf e7 03 00 00       	mov    $0x3e7,%edi
    14c5:	e8 b6 fc ff ff       	call   1180 <exit@plt>
    14ca:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
    14ce:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    14d2:	be 37 00 00 00       	mov    $0x37,%esi
    14d7:	48 89 c7             	mov    %rax,%rdi
    14da:	e8 61 fc ff ff       	call   1140 <fgets@plt>
    14df:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    14e3:	48 89 c7             	mov    %rax,%rdi
    14e6:	e8 05 fc ff ff       	call   10f0 <puts@plt>
    14eb:	eb 14                	jmp    1501 <main+0x179>
    14ed:	48 8d 05 e9 0b 00 00 	lea    0xbe9(%rip),%rax        # 20dd <_IO_stdin_used+0xdd>
    14f4:	48 89 c7             	mov    %rax,%rdi
    14f7:	b8 00 00 00 00       	mov    $0x0,%eax
    14fc:	e8 0f fc ff ff       	call   1110 <printf@plt>
    1501:	b8 00 00 00 00       	mov    $0x0,%eax
    1506:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    150a:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    1511:	00 00 
    1513:	74 05                	je     151a <main+0x192>
    1515:	e8 e6 fb ff ff       	call   1100 <__stack_chk_fail@plt>
    151a:	c9                   	leave  
    151b:	c3                   	ret    

Disassembly of section .fini:

000000000000151c <_fini>:
    151c:	f3 0f 1e fa          	endbr64 
    1520:	48 83 ec 08          	sub    $0x8,%rsp
    1524:	48 83 c4 08          	add    $0x8,%rsp
    1528:	c3                   	ret    
