
chall:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 42 2f 00 00    	push   0x2f42(%rip)        # 3f68 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 43 2f 00 00 	bnd jmp *0x2f43(%rip)        # 3f70 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop
    1070:	f3 0f 1e fa          	endbr64 
    1074:	68 04 00 00 00       	push   $0x4
    1079:	f2 e9 a1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    107f:	90                   	nop
    1080:	f3 0f 1e fa          	endbr64 
    1084:	68 05 00 00 00       	push   $0x5
    1089:	f2 e9 91 ff ff ff    	bnd jmp 1020 <_init+0x20>
    108f:	90                   	nop
    1090:	f3 0f 1e fa          	endbr64 
    1094:	68 06 00 00 00       	push   $0x6
    1099:	f2 e9 81 ff ff ff    	bnd jmp 1020 <_init+0x20>
    109f:	90                   	nop
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	68 07 00 00 00       	push   $0x7
    10a9:	f2 e9 71 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10af:	90                   	nop
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	68 08 00 00 00       	push   $0x8
    10b9:	f2 e9 61 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10bf:	90                   	nop
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	68 09 00 00 00       	push   $0x9
    10c9:	f2 e9 51 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10cf:	90                   	nop
    10d0:	f3 0f 1e fa          	endbr64 
    10d4:	68 0a 00 00 00       	push   $0xa
    10d9:	f2 e9 41 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10df:	90                   	nop
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	68 0b 00 00 00       	push   $0xb
    10e9:	f2 e9 31 ff ff ff    	bnd jmp 1020 <_init+0x20>
    10ef:	90                   	nop

Disassembly of section .plt.got:

00000000000010f0 <__cxa_finalize@plt>:
    10f0:	f3 0f 1e fa          	endbr64 
    10f4:	f2 ff 25 fd 2e 00 00 	bnd jmp *0x2efd(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    10fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001100 <putchar@plt>:
    1100:	f3 0f 1e fa          	endbr64 
    1104:	f2 ff 25 6d 2e 00 00 	bnd jmp *0x2e6d(%rip)        # 3f78 <putchar@GLIBC_2.2.5>
    110b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001110 <puts@plt>:
    1110:	f3 0f 1e fa          	endbr64 
    1114:	f2 ff 25 65 2e 00 00 	bnd jmp *0x2e65(%rip)        # 3f80 <puts@GLIBC_2.2.5>
    111b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001120 <__stack_chk_fail@plt>:
    1120:	f3 0f 1e fa          	endbr64 
    1124:	f2 ff 25 5d 2e 00 00 	bnd jmp *0x2e5d(%rip)        # 3f88 <__stack_chk_fail@GLIBC_2.4>
    112b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001130 <printf@plt>:
    1130:	f3 0f 1e fa          	endbr64 
    1134:	f2 ff 25 55 2e 00 00 	bnd jmp *0x2e55(%rip)        # 3f90 <printf@GLIBC_2.2.5>
    113b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001140 <srand@plt>:
    1140:	f3 0f 1e fa          	endbr64 
    1144:	f2 ff 25 4d 2e 00 00 	bnd jmp *0x2e4d(%rip)        # 3f98 <srand@GLIBC_2.2.5>
    114b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001150 <fgets@plt>:
    1150:	f3 0f 1e fa          	endbr64 
    1154:	f2 ff 25 45 2e 00 00 	bnd jmp *0x2e45(%rip)        # 3fa0 <fgets@GLIBC_2.2.5>
    115b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001160 <strcmp@plt>:
    1160:	f3 0f 1e fa          	endbr64 
    1164:	f2 ff 25 3d 2e 00 00 	bnd jmp *0x2e3d(%rip)        # 3fa8 <strcmp@GLIBC_2.2.5>
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <time@plt>:
    1170:	f3 0f 1e fa          	endbr64 
    1174:	f2 ff 25 35 2e 00 00 	bnd jmp *0x2e35(%rip)        # 3fb0 <time@GLIBC_2.2.5>
    117b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001180 <__isoc99_sscanf@plt>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	f2 ff 25 2d 2e 00 00 	bnd jmp *0x2e2d(%rip)        # 3fb8 <__isoc99_sscanf@GLIBC_2.7>
    118b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001190 <setvbuf@plt>:
    1190:	f3 0f 1e fa          	endbr64 
    1194:	f2 ff 25 25 2e 00 00 	bnd jmp *0x2e25(%rip)        # 3fc0 <setvbuf@GLIBC_2.2.5>
    119b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011a0 <fopen@plt>:
    11a0:	f3 0f 1e fa          	endbr64 
    11a4:	f2 ff 25 1d 2e 00 00 	bnd jmp *0x2e1d(%rip)        # 3fc8 <fopen@GLIBC_2.2.5>
    11ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000011b0 <rand@plt>:
    11b0:	f3 0f 1e fa          	endbr64 
    11b4:	f2 ff 25 15 2e 00 00 	bnd jmp *0x2e15(%rip)        # 3fd0 <rand@GLIBC_2.2.5>
    11bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000011c0 <_start>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	31 ed                	xor    %ebp,%ebp
    11c6:	49 89 d1             	mov    %rdx,%r9
    11c9:	5e                   	pop    %rsi
    11ca:	48 89 e2             	mov    %rsp,%rdx
    11cd:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    11d1:	50                   	push   %rax
    11d2:	54                   	push   %rsp
    11d3:	45 31 c0             	xor    %r8d,%r8d
    11d6:	31 c9                	xor    %ecx,%ecx
    11d8:	48 8d 3d 48 04 00 00 	lea    0x448(%rip),%rdi        # 1627 <main>
    11df:	ff 15 f3 2d 00 00    	call   *0x2df3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    11e5:	f4                   	hlt    
    11e6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    11ed:	00 00 00 

00000000000011f0 <deregister_tm_clones>:
    11f0:	48 8d 3d 19 2e 00 00 	lea    0x2e19(%rip),%rdi        # 4010 <stdout@GLIBC_2.2.5>
    11f7:	48 8d 05 12 2e 00 00 	lea    0x2e12(%rip),%rax        # 4010 <stdout@GLIBC_2.2.5>
    11fe:	48 39 f8             	cmp    %rdi,%rax
    1201:	74 15                	je     1218 <deregister_tm_clones+0x28>
    1203:	48 8b 05 d6 2d 00 00 	mov    0x2dd6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    120a:	48 85 c0             	test   %rax,%rax
    120d:	74 09                	je     1218 <deregister_tm_clones+0x28>
    120f:	ff e0                	jmp    *%rax
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	ret    
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <register_tm_clones>:
    1220:	48 8d 3d e9 2d 00 00 	lea    0x2de9(%rip),%rdi        # 4010 <stdout@GLIBC_2.2.5>
    1227:	48 8d 35 e2 2d 00 00 	lea    0x2de2(%rip),%rsi        # 4010 <stdout@GLIBC_2.2.5>
    122e:	48 29 fe             	sub    %rdi,%rsi
    1231:	48 89 f0             	mov    %rsi,%rax
    1234:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1238:	48 c1 f8 03          	sar    $0x3,%rax
    123c:	48 01 c6             	add    %rax,%rsi
    123f:	48 d1 fe             	sar    %rsi
    1242:	74 14                	je     1258 <register_tm_clones+0x38>
    1244:	48 8b 05 a5 2d 00 00 	mov    0x2da5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    124b:	48 85 c0             	test   %rax,%rax
    124e:	74 08                	je     1258 <register_tm_clones+0x38>
    1250:	ff e0                	jmp    *%rax
    1252:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1258:	c3                   	ret    
    1259:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001260 <__do_global_dtors_aux>:
    1260:	f3 0f 1e fa          	endbr64 
    1264:	80 3d bd 2d 00 00 00 	cmpb   $0x0,0x2dbd(%rip)        # 4028 <completed.0>
    126b:	75 2b                	jne    1298 <__do_global_dtors_aux+0x38>
    126d:	55                   	push   %rbp
    126e:	48 83 3d 82 2d 00 00 	cmpq   $0x0,0x2d82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1275:	00 
    1276:	48 89 e5             	mov    %rsp,%rbp
    1279:	74 0c                	je     1287 <__do_global_dtors_aux+0x27>
    127b:	48 8b 3d 86 2d 00 00 	mov    0x2d86(%rip),%rdi        # 4008 <__dso_handle>
    1282:	e8 69 fe ff ff       	call   10f0 <__cxa_finalize@plt>
    1287:	e8 64 ff ff ff       	call   11f0 <deregister_tm_clones>
    128c:	c6 05 95 2d 00 00 01 	movb   $0x1,0x2d95(%rip)        # 4028 <completed.0>
    1293:	5d                   	pop    %rbp
    1294:	c3                   	ret    
    1295:	0f 1f 00             	nopl   (%rax)
    1298:	c3                   	ret    
    1299:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012a0 <frame_dummy>:
    12a0:	f3 0f 1e fa          	endbr64 
    12a4:	e9 77 ff ff ff       	jmp    1220 <register_tm_clones>

00000000000012a9 <swap>:
    12a9:	f3 0f 1e fa          	endbr64 
    12ad:	55                   	push   %rbp
    12ae:	48 89 e5             	mov    %rsp,%rbp
    12b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    12b5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    12b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12bd:	0f b6 00             	movzbl (%rax),%eax
    12c0:	88 45 ff             	mov    %al,-0x1(%rbp)
    12c3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12c7:	0f b6 10             	movzbl (%rax),%edx
    12ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    12ce:	88 10                	mov    %dl,(%rax)
    12d0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    12d4:	0f b6 55 ff          	movzbl -0x1(%rbp),%edx
    12d8:	88 10                	mov    %dl,(%rax)
    12da:	90                   	nop
    12db:	5d                   	pop    %rbp
    12dc:	c3                   	ret    

00000000000012dd <shuffle>:
    12dd:	f3 0f 1e fa          	endbr64 
    12e1:	55                   	push   %rbp
    12e2:	48 89 e5             	mov    %rsp,%rbp
    12e5:	48 83 ec 20          	sub    $0x20,%rsp
    12e9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    12ed:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    12f0:	bf 00 00 00 00       	mov    $0x0,%edi
    12f5:	e8 76 fe ff ff       	call   1170 <time@plt>
    12fa:	89 c7                	mov    %eax,%edi
    12fc:	e8 3f fe ff ff       	call   1140 <srand@plt>
    1301:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1308:	eb 41                	jmp    134b <shuffle+0x6e>
    130a:	e8 a1 fe ff ff       	call   11b0 <rand@plt>
    130f:	8b 55 e4             	mov    -0x1c(%rbp),%edx
    1312:	89 d1                	mov    %edx,%ecx
    1314:	2b 4d f8             	sub    -0x8(%rbp),%ecx
    1317:	99                   	cltd   
    1318:	f7 f9                	idiv   %ecx
    131a:	8b 45 f8             	mov    -0x8(%rbp),%eax
    131d:	01 d0                	add    %edx,%eax
    131f:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1322:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1325:	48 63 d0             	movslq %eax,%rdx
    1328:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    132c:	48 01 c2             	add    %rax,%rdx
    132f:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1332:	48 63 c8             	movslq %eax,%rcx
    1335:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1339:	48 01 c8             	add    %rcx,%rax
    133c:	48 89 d6             	mov    %rdx,%rsi
    133f:	48 89 c7             	mov    %rax,%rdi
    1342:	e8 62 ff ff ff       	call   12a9 <swap>
    1347:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    134b:	8b 45 f8             	mov    -0x8(%rbp),%eax
    134e:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1351:	7c b7                	jl     130a <shuffle+0x2d>
    1353:	90                   	nop
    1354:	90                   	nop
    1355:	c9                   	leave  
    1356:	c3                   	ret    

0000000000001357 <show_hand>:
    1357:	f3 0f 1e fa          	endbr64 
    135b:	55                   	push   %rbp
    135c:	48 89 e5             	mov    %rsp,%rbp
    135f:	48 83 ec 20          	sub    $0x20,%rsp
    1363:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1367:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    136a:	48 8d 05 97 0c 00 00 	lea    0xc97(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    1371:	48 89 c7             	mov    %rax,%rdi
    1374:	e8 97 fd ff ff       	call   1110 <puts@plt>
    1379:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1380:	eb 57                	jmp    13d9 <show_hand+0x82>
    1382:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1385:	48 63 d0             	movslq %eax,%rdx
    1388:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    138c:	48 01 d0             	add    %rdx,%rax
    138f:	0f b6 00             	movzbl (%rax),%eax
    1392:	3c 30                	cmp    $0x30,%al
    1394:	75 16                	jne    13ac <show_hand+0x55>
    1396:	48 8d 05 7a 0c 00 00 	lea    0xc7a(%rip),%rax        # 2017 <_IO_stdin_used+0x17>
    139d:	48 89 c7             	mov    %rax,%rdi
    13a0:	b8 00 00 00 00       	mov    $0x0,%eax
    13a5:	e8 86 fd ff ff       	call   1130 <printf@plt>
    13aa:	eb 29                	jmp    13d5 <show_hand+0x7e>
    13ac:	8b 45 fc             	mov    -0x4(%rbp),%eax
    13af:	48 63 d0             	movslq %eax,%rdx
    13b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    13b6:	48 01 d0             	add    %rdx,%rax
    13b9:	0f b6 00             	movzbl (%rax),%eax
    13bc:	0f be c0             	movsbl %al,%eax
    13bf:	89 c6                	mov    %eax,%esi
    13c1:	48 8d 05 55 0c 00 00 	lea    0xc55(%rip),%rax        # 201d <_IO_stdin_used+0x1d>
    13c8:	48 89 c7             	mov    %rax,%rdi
    13cb:	b8 00 00 00 00       	mov    $0x0,%eax
    13d0:	e8 5b fd ff ff       	call   1130 <printf@plt>
    13d5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    13d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    13dc:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    13df:	7c a1                	jl     1382 <show_hand+0x2b>
    13e1:	bf 0a 00 00 00       	mov    $0xa,%edi
    13e6:	e8 15 fd ff ff       	call   1100 <putchar@plt>
    13eb:	90                   	nop
    13ec:	c9                   	leave  
    13ed:	c3                   	ret    

00000000000013ee <win>:
    13ee:	f3 0f 1e fa          	endbr64 
    13f2:	55                   	push   %rbp
    13f3:	48 89 e5             	mov    %rsp,%rbp
    13f6:	48 81 ec 20 01 00 00 	sub    $0x120,%rsp
    13fd:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1404:	00 00 
    1406:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    140a:	31 c0                	xor    %eax,%eax
    140c:	48 8d 05 0f 0c 00 00 	lea    0xc0f(%rip),%rax        # 2022 <_IO_stdin_used+0x22>
    1413:	48 89 c6             	mov    %rax,%rsi
    1416:	48 8d 05 07 0c 00 00 	lea    0xc07(%rip),%rax        # 2024 <_IO_stdin_used+0x24>
    141d:	48 89 c7             	mov    %rax,%rdi
    1420:	e8 7b fd ff ff       	call   11a0 <fopen@plt>
    1425:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)
    142c:	48 83 bd e8 fe ff ff 	cmpq   $0x0,-0x118(%rbp)
    1433:	00 
    1434:	75 0f                	jne    1445 <win+0x57>
    1436:	48 8d 05 f3 0b 00 00 	lea    0xbf3(%rip),%rax        # 2030 <_IO_stdin_used+0x30>
    143d:	48 89 c7             	mov    %rax,%rdi
    1440:	e8 cb fc ff ff       	call   1110 <puts@plt>
    1445:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
    144c:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    1453:	be 00 01 00 00       	mov    $0x100,%esi
    1458:	48 89 c7             	mov    %rax,%rdi
    145b:	e8 f0 fc ff ff       	call   1150 <fgets@plt>
    1460:	48 8d 85 f0 fe ff ff 	lea    -0x110(%rbp),%rax
    1467:	48 89 c7             	mov    %rax,%rdi
    146a:	e8 a1 fc ff ff       	call   1110 <puts@plt>
    146f:	90                   	nop
    1470:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1474:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    147b:	00 00 
    147d:	74 05                	je     1484 <win+0x96>
    147f:	e8 9c fc ff ff       	call   1120 <__stack_chk_fail@plt>
    1484:	c9                   	leave  
    1485:	c3                   	ret    

0000000000001486 <play>:
    1486:	f3 0f 1e fa          	endbr64 
    148a:	55                   	push   %rbp
    148b:	48 89 e5             	mov    %rsp,%rbp
    148e:	48 83 ec 30          	sub    $0x30,%rsp
    1492:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1499:	00 00 
    149b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    149f:	31 c0                	xor    %eax,%eax
    14a1:	48 b8 30 31 32 33 34 	movabs $0x3736353433323130,%rax
    14a8:	35 36 37 
    14ab:	48 89 45 eb          	mov    %rax,-0x15(%rbp)
    14af:	c7 45 f3 38 39 4a 51 	movl   $0x514a3938,-0xd(%rbp)
    14b6:	c6 45 f7 4b          	movb   $0x4b,-0x9(%rbp)
    14ba:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    14be:	be 0d 00 00 00       	mov    $0xd,%esi
    14c3:	48 89 c7             	mov    %rax,%rdi
    14c6:	e8 12 fe ff ff       	call   12dd <shuffle>
    14cb:	48 8d 05 c6 0b 00 00 	lea    0xbc6(%rip),%rax        # 2098 <_IO_stdin_used+0x98>
    14d2:	48 89 c7             	mov    %rax,%rdi
    14d5:	e8 36 fc ff ff       	call   1110 <puts@plt>
    14da:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    14de:	be 08 00 00 00       	mov    $0x8,%esi
    14e3:	48 89 c7             	mov    %rax,%rdi
    14e6:	e8 6c fe ff ff       	call   1357 <show_hand>
    14eb:	48 8d 05 f2 0b 00 00 	lea    0xbf2(%rip),%rax        # 20e4 <_IO_stdin_used+0xe4>
    14f2:	48 89 c7             	mov    %rax,%rdi
    14f5:	e8 16 fc ff ff       	call   1110 <puts@plt>
    14fa:	48 8b 15 1f 2b 00 00 	mov    0x2b1f(%rip),%rdx        # 4020 <stdin@GLIBC_2.2.5>
    1501:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    1505:	be 08 00 00 00       	mov    $0x8,%esi
    150a:	48 89 c7             	mov    %rax,%rdi
    150d:	e8 3e fc ff ff       	call   1150 <fgets@plt>
    1512:	e9 8c 00 00 00       	jmp    15a3 <play+0x11d>
    1517:	48 8d 55 d8          	lea    -0x28(%rbp),%rdx
    151b:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    151f:	48 8d 0d d4 0b 00 00 	lea    0xbd4(%rip),%rcx        # 20fa <_IO_stdin_used+0xfa>
    1526:	48 89 ce             	mov    %rcx,%rsi
    1529:	48 89 c7             	mov    %rax,%rdi
    152c:	b8 00 00 00 00       	mov    $0x0,%eax
    1531:	e8 4a fc ff ff       	call   1180 <__isoc99_sscanf@plt>
    1536:	89 45 dc             	mov    %eax,-0x24(%rbp)
    1539:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)
    153d:	7e 1d                	jle    155c <play+0xd6>
    153f:	8b 45 d8             	mov    -0x28(%rbp),%eax
    1542:	48 98                	cltq   
    1544:	48 8d 55 eb          	lea    -0x15(%rbp),%rdx
    1548:	48 01 c2             	add    %rax,%rdx
    154b:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    154f:	48 89 d6             	mov    %rdx,%rsi
    1552:	48 89 c7             	mov    %rax,%rdi
    1555:	e8 4f fd ff ff       	call   12a9 <swap>
    155a:	eb 0f                	jmp    156b <play+0xe5>
    155c:	48 8d 05 9d 0b 00 00 	lea    0xb9d(%rip),%rax        # 2100 <_IO_stdin_used+0x100>
    1563:	48 89 c7             	mov    %rax,%rdi
    1566:	e8 a5 fb ff ff       	call   1110 <puts@plt>
    156b:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    156f:	be 08 00 00 00       	mov    $0x8,%esi
    1574:	48 89 c7             	mov    %rax,%rdi
    1577:	e8 db fd ff ff       	call   1357 <show_hand>
    157c:	48 8d 05 61 0b 00 00 	lea    0xb61(%rip),%rax        # 20e4 <_IO_stdin_used+0xe4>
    1583:	48 89 c7             	mov    %rax,%rdi
    1586:	e8 85 fb ff ff       	call   1110 <puts@plt>
    158b:	48 8b 15 8e 2a 00 00 	mov    0x2a8e(%rip),%rdx        # 4020 <stdin@GLIBC_2.2.5>
    1592:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    1596:	be 08 00 00 00       	mov    $0x8,%esi
    159b:	48 89 c7             	mov    %rax,%rdi
    159e:	e8 ad fb ff ff       	call   1150 <fgets@plt>
    15a3:	48 8d 45 e3          	lea    -0x1d(%rbp),%rax
    15a7:	48 8d 15 7d 0b 00 00 	lea    0xb7d(%rip),%rdx        # 212b <_IO_stdin_used+0x12b>
    15ae:	48 89 d6             	mov    %rdx,%rsi
    15b1:	48 89 c7             	mov    %rax,%rdi
    15b4:	e8 a7 fb ff ff       	call   1160 <strcmp@plt>
    15b9:	85 c0                	test   %eax,%eax
    15bb:	0f 85 56 ff ff ff    	jne    1517 <play+0x91>
    15c1:	48 8d 05 68 0b 00 00 	lea    0xb68(%rip),%rax        # 2130 <_IO_stdin_used+0x130>
    15c8:	48 89 c7             	mov    %rax,%rdi
    15cb:	e8 40 fb ff ff       	call   1110 <puts@plt>
    15d0:	48 8d 45 eb          	lea    -0x15(%rbp),%rax
    15d4:	48 8b 00             	mov    (%rax),%rax
    15d7:	48 ba 46 32 6e 64 53 	movabs $0x70316853646e3246,%rdx
    15de:	68 31 70 
    15e1:	48 39 d0             	cmp    %rdx,%rax
    15e4:	75 1b                	jne    1601 <play+0x17b>
    15e6:	48 8d 05 6b 0b 00 00 	lea    0xb6b(%rip),%rax        # 2158 <_IO_stdin_used+0x158>
    15ed:	48 89 c7             	mov    %rax,%rdi
    15f0:	e8 1b fb ff ff       	call   1110 <puts@plt>
    15f5:	b8 00 00 00 00       	mov    $0x0,%eax
    15fa:	e8 ef fd ff ff       	call   13ee <win>
    15ff:	eb 0f                	jmp    1610 <play+0x18a>
    1601:	48 8d 05 60 0b 00 00 	lea    0xb60(%rip),%rax        # 2168 <_IO_stdin_used+0x168>
    1608:	48 89 c7             	mov    %rax,%rdi
    160b:	e8 00 fb ff ff       	call   1110 <puts@plt>
    1610:	90                   	nop
    1611:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1615:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    161c:	00 00 
    161e:	74 05                	je     1625 <play+0x19f>
    1620:	e8 fb fa ff ff       	call   1120 <__stack_chk_fail@plt>
    1625:	c9                   	leave  
    1626:	c3                   	ret    

0000000000001627 <main>:
    1627:	f3 0f 1e fa          	endbr64 
    162b:	55                   	push   %rbp
    162c:	48 89 e5             	mov    %rsp,%rbp
    162f:	48 83 ec 30          	sub    $0x30,%rsp
    1633:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1636:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    163a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1641:	00 00 
    1643:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1647:	31 c0                	xor    %eax,%eax
    1649:	48 8b 05 d0 29 00 00 	mov    0x29d0(%rip),%rax        # 4020 <stdin@GLIBC_2.2.5>
    1650:	b9 00 00 00 00       	mov    $0x0,%ecx
    1655:	ba 02 00 00 00       	mov    $0x2,%edx
    165a:	be 00 00 00 00       	mov    $0x0,%esi
    165f:	48 89 c7             	mov    %rax,%rdi
    1662:	e8 29 fb ff ff       	call   1190 <setvbuf@plt>
    1667:	48 8b 05 a2 29 00 00 	mov    0x29a2(%rip),%rax        # 4010 <stdout@GLIBC_2.2.5>
    166e:	b9 00 00 00 00       	mov    $0x0,%ecx
    1673:	ba 02 00 00 00       	mov    $0x2,%edx
    1678:	be 00 00 00 00       	mov    $0x0,%esi
    167d:	48 89 c7             	mov    %rax,%rdi
    1680:	e8 0b fb ff ff       	call   1190 <setvbuf@plt>
    1685:	48 b8 2f 70 73 2f 64 	movabs $0x466862642f73702f,%rax
    168c:	62 68 46 
    168f:	48 89 45 ec          	mov    %rax,-0x14(%rbp)
    1693:	c7 45 f4 65 69 6e 53 	movl   $0x536e6965,-0xc(%rbp)
    169a:	b8 00 00 00 00       	mov    $0x0,%eax
    169f:	e8 e2 fd ff ff       	call   1486 <play>
    16a4:	b8 00 00 00 00       	mov    $0x0,%eax
    16a9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    16ad:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    16b4:	00 00 
    16b6:	74 05                	je     16bd <main+0x96>
    16b8:	e8 63 fa ff ff       	call   1120 <__stack_chk_fail@plt>
    16bd:	c9                   	leave  
    16be:	c3                   	ret    

Disassembly of section .fini:

00000000000016c0 <_fini>:
    16c0:	f3 0f 1e fa          	endbr64 
    16c4:	48 83 ec 08          	sub    $0x8,%rsp
    16c8:	48 83 c4 08          	add    $0x8,%rsp
    16cc:	c3                   	ret    
